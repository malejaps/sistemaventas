@model SistemaVentasEntidades.ProductoEntidad

@{
    ViewBag.Title = "Editar Producto";
}

<h2>Editar Producto</h2>

@using (Html.BeginForm("EditarProducto", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        

        <div class="form-group">
            @Html.LabelFor(model => model.NombreProducto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombreProducto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombreProducto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cantidad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cantidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control",@readonly="readonly" } })
                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescripcionProducto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescripcionProducto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescripcionProducto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodCatProducto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("categoriaProducto", ViewData["categoriaProducto"] as SelectList, htmlAttributes: new { @class = "form-control" })
                @Html.HiddenFor(model => model.CodCatProducto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodCatProducto, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.CodProducto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.CodProducto, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.CodProducto, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.RutaFoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.RutaFoto, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" }})
                @*@Html.ValidationMessageFor(model => model.RutaFoto, "", new { @class = "text-danger" })*@
                @*<div id="wrap">
                <div class="field">
                    Aqui va el otro codigo
                </div>
                <progress id="progressBar" value="0" max="100" class="rm-progress"></progress>
                <div id="percentageCalc"></div>
            </div>*@
            </div>
        </div>
         @*<div class="form-group">
             <label class="control-label col-md-2">Cargar foto</label>
                <div class="col-md-10">
                    <ul class="col-md-10">
                        <li>
                            <input type="file" id="rutaFoto" name="rutaFoto" onchange="selectedFile();" />
                        </li>
                        <li>
                            <div id="fileSize"></div>
                        </li>
                        <li>
                            <div id="fileType"></div>
                        </li>
                    </ul>
                </div>
                
            </div>*@
      
            <div class="form-group">
       
                @Html.HiddenFor(model => model.CodUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.CodUsuario, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.CodUsuario, "", new { @class = "text-danger" })*@
                </div>
            </div>

           
</div>
    
}


       
<div>
    @Html.ActionLink("Regresar", "Index")
</div>
